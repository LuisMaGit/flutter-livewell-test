// Mocks generated by Mockito 5.3.2 from annotations
// in livewell_test/test/mocks/core_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/models/pictures_paginated.dart' as _i5;
import 'package:core/services/pagination_service.dart' as _i2;
import 'package:core/services/picture_network_service/i_picture_network_service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PaginationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaginationService extends _i1.Mock implements _i2.PaginationService {
  @override
  set pageSize(int? value) => super.noSuchMethod(
        Invocation.setter(
          #pageSize,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get getPageSize => (super.noSuchMethod(
        Invocation.getter(#getPageSize),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get nextPage => (super.noSuchMethod(
        Invocation.getter(#nextPage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get missingData => (super.noSuchMethod(
        Invocation.getter(#missingData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void setControlParamsFromSuccessPage({required int? pageObtainedSize}) =>
      super.noSuchMethod(
        Invocation.method(
          #setControlParamsFromSuccessPage,
          [],
          {#pageObtainedSize: pageObtainedSize},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool shouldRequestOtherPage(int? index) => (super.noSuchMethod(
        Invocation.method(
          #shouldRequestOtherPage,
          [index],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IPictureNetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPictureNetworkService extends _i1.Mock
    implements _i3.IPictureNetworkService {
  @override
  _i4.Future<_i5.PicturesPaginated?> getPictures({
    required String? query,
    required int? page,
    required int? perPage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPictures,
          [],
          {
            #query: query,
            #page: page,
            #perPage: perPage,
          },
        ),
        returnValue: _i4.Future<_i5.PicturesPaginated?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.PicturesPaginated?>.value(),
      ) as _i4.Future<_i5.PicturesPaginated?>);
}
